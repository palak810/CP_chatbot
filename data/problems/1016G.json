{
    "id": "1016G",
    "contest_id": 1016,
    "problem_letter": "G",
    "title": "G. Appropriate Team",
    "statement": "Since next season are coming, you'd like to form a team from two or three participants. There are n candidates, the i-th candidate has rank a_i. But you have weird requirements for your teammates: if you have rank v and have chosen the i-th and j-th candidate, then GCD(v, a_i) = X and LCM(v, a_j) = Y must be met.\nYou are very experienced, so you can change your rank to any non-negative integer but X and Y are tied with your birthdate, so they are fixed.\nNow you want to know, how many are there pairs (i, j) such that there exists an integer v meeting the following constraints: GCD(v, a_i) = X and LCM(v, a_j) = Y. It's possible that i = j and you form a team of two.\nGCD is the greatest common divisor of two number, LCM — the least common multiple.\nFirst line contains three integers n, X and Y (1  n  2  10^5, 1  X  Y  10^{18}) — the number of candidates and corresponding constants.\nSecond line contains n space separated integers a_1, a_2, , a_n (1  a_i  10^{18}) — ranks of candidates.\nPrint the only integer — the number of pairs (i, j) such that there exists an integer v meeting the following constraints: GCD(v, a_i) = X and LCM(v, a_j) = Y. It's possible that i = j.\nIn the first example next pairs are valid: a_j = 1 and a_i = [2, 4, 6, 8, 10, 12] or a_j = 2 and a_i = [2, 4, 6, 8, 10, 12]. The v in both cases can be equal to 2.\nIn the second example next pairs are valid: ",
    "input": "First line contains three integers n, X and Y (1 ≤ n ≤ 2 \\cdot 10^5, 1 ≤ X ≤ Y ≤ 10^{18}) — the number of candidates and corresponding constants.",
    "output": "Print the only integer — the number of pairs $$$(i, j)$$$ such that there exists an integer $$$v$$$ meeting the following constraints: $$$GCD(v, a_i) = X$$$ and $$$LCM(v, a_j) = Y$$$. It's possible that $$$i = j$$$.",
    "time_limit": "2 seconds",
    "memory_limit": "256 megabytes",
    "tags": [
        "bitmasks",
        "math",
        "number theory",
        "*2700"
    ]
}