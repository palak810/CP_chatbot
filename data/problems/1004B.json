{
    "id": "1004B",
    "contest_id": 1004,
    "problem_letter": "B",
    "title": "B. Sonya and Exhibition",
    "statement": "Sonya decided to organize an exhibition of flowers. Since the girl likes only roses and lilies, she decided that only these two kinds of flowers should be in this exhibition.\nThere are n flowers in a row in the exhibition. Sonya can put either a rose or a lily in the i-th position. Thus each of n positions should contain exactly one flower: a rose or a lily.\nShe knows that exactly m people will visit this exhibition. The i-th visitor will visit all flowers from l_i to r_i inclusive. The girl knows that each segment has its own beauty that is equal to the product of the number of roses and the number of lilies.\nSonya wants her exhibition to be liked by a lot of people. That is why she wants to put the flowers in such way that the sum of beauties of all segments would be maximum possible.\nThe first line contains two integers n and m (1 n, m 10^3) — the number of flowers and visitors respectively.\nEach of the next m lines contains two integers l_i and r_i (1 l_i r_i n), meaning that i-th visitor will visit all flowers from l_i to r_i inclusive.\nPrint the string of n characters. The i-th symbol should be «0» if you want to put a rose in the i-th position, otherwise «1» if you want to put a lily.\nIf there are multiple answers, print any.\nIn the first example, Sonya can put roses in the first, fourth, and fifth positions, and lilies in the second and third positions;\nThe total beauty is equal to 2+2+4=8.\nIn the second example, Sonya can put roses in the third, fourth, and sixth positions, and lilies in the first, second, and fifth positions;\nThe total beauty is equal to 1+4+2=7.",
    "input": "The first line contains two integers n and m (1≤q n, m≤q 10^3) — the number of flowers and visitors respectively.",
    "output": "Print the string of $$$n$$$ characters. The $$$i$$$-th symbol should be «0» if you want to put a rose in the $$$i$$$-th position, otherwise «1» if you want to put a lily.",
    "time_limit": "1 second",
    "memory_limit": "256 megabytes",
    "tags": [
        "constructive algorithms",
        "greedy",
        "implementation",
        "math",
        "*1300"
    ]
}